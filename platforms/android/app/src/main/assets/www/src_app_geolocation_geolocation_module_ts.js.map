{"version":3,"file":"src_app_geolocation_geolocation_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACK;AACf;AAEQ;AAErD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAe;KAC3B;CACF,CAAC;IAYW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAVjC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,8DAAe,CAAC;QAC/B,SAAS,EAAE,CAAC,sEAAW,CAAC;KACzB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC1BlC,eAAe;AACkD;AACL;AACoD;IASnG,eAAe,SAAf,eAAe;IAQ1B,YACU,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;IACxC,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YAElD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YAEvC,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACnF,MAAM,UAAU,GAAG;gBACjB,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;aACzC,CAAC;YAEH,0EAA0E;YAEzE,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAE1E,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,EAAE,GAAG,EAAE;gBAEnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAE3C,8EAA8E;YAC5E,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;CAEA;;YA1DM,sEAAW;YACX,6EAAc;;;yBAWpB,oDAAS,SAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;AAFxB,eAAe;IAL3B,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wEAAoC;;KAErC,CAAC;GACW,eAAe,CAgDzB;AAhDyB","sources":["./src/app/geolocation/geolocation.module.ts","./src/app/geolocation/geolocation.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GeolocationPage } from './geolocation.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GeolocationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [GeolocationPage],\r\n  providers: [Geolocation]\r\n})\r\nexport class GeolocationPageModule {}\r\n","// home.page.ts\r\nimport { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\r\n\r\ndeclare let google;\r\n\r\n@Component({\r\n  selector: 'app-geolocation',\r\n  templateUrl: 'geolocation.page.html',\r\n  styleUrls: ['geolocation.page.scss'],\r\n})\r\nexport class GeolocationPage {\r\n\r\n  @ViewChild('map', { static: false }) mapElement: ElementRef;\r\n  map: any;\r\n  address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n\r\n  constructor(\r\n    private geolocation: Geolocation,\r\n    private nativeGeocoder: NativeGeocoder) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadMap();\r\n  }\r\n\r\n  loadMap() {\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n\r\n      this.latitude = resp.coords.latitude;\r\n      this.longitude = resp.coords.longitude;\r\n\r\n      const latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\r\n      const mapOptions = {\r\n        center: latLng,\r\n        zoom: 16,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n      };\r\n\r\n     // this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\r\n\r\n      this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\r\n\r\n      this.map.addListener('dragend', () => {\r\n\r\n        this.latitude = this.map.center.lat();\r\n        this.longitude = this.map.center.lng();\r\n\r\n    //    this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng());\r\n      });\r\n\r\n    }).catch((error) => {\r\n      console.log('Error getting location', error);\r\n    });\r\n  }\r\n\r\n  }\r\n"],"names":[],"sourceRoot":"webpack:///"}