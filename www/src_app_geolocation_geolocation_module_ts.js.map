{"version":3,"file":"src_app_geolocation_geolocation_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACK;AACf;AAEQ;AAErD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAe;KAC3B;CACF,CAAC;IAYW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAVjC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,8DAAe,CAAC;QAC/B,SAAS,EAAE,CAAC,sEAAW,CAAC;KACzB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AC1BoD;AAC1B;IAO/C,eAAe,SAAf,eAAe;IAK1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACvC,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;gBACnE,MAAM,EAAE,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAG,OAAO,EAAC;gBACnC,IAAI,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YAChD,MAAM,GAAG,GAAG;gBACV,GAAG,EAAE,IAAI,CAAC,QAAQ;gBAClB,GAAG,EAAE,IAAI,CAAC,SAAS;aACpB,CAAC;YACF,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC5B,UAAU,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YACzC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAvCQ,sEAAW;;;+BAWjB,oDAAS,SAAC,YAAY;;AAJZ,eAAe;IAL3B,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wEAAsC;;KAEvC,CAAC;GACW,eAAe,CAgC3B;AAhC2B","sources":["./src/app/geolocation/geolocation.module.ts","./src/app/geolocation/geolocation.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeolocationPage } from './geolocation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeolocationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GeolocationPage],\n  providers: [Geolocation]\n})\nexport class GeolocationPageModule {}\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\ndeclare let google;\n@Component({\n  selector: 'app-geolocation',\n  templateUrl: './geolocation.page.html',\n  styleUrls: ['./geolocation.page.scss'],\n})\nexport class GeolocationPage implements OnInit, AfterViewInit {\n  latitude: any;\n  longitude: any;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  @ViewChild('mapElement') mapNativeElement: ElementRef;\n  constructor(private geolocation: Geolocation) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n      const map = new google.maps.Map(this.mapNativeElement.nativeElement, {\n        center: {lat: 3.080, lng:  101.451},\n        zoom: 6\n      });\n      const infoWindow = new google.maps.InfoWindow();\n      const pos = {\n        lat: this.latitude,\n        lng: this.longitude\n      };\n      infoWindow.setPosition(pos);\n      infoWindow.setContent('Location found.');\n      infoWindow.open(map);\n      map.setCenter(pos);\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}